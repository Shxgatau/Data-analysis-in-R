res = paste(res1,res2,res3)
res = gsub("\r\n","",res)
res = gsub("[\\W]","",res)
res
res = gsub("[\\w]","",res)
res
res = gsub("[\W]","",res)
res = gsub("[!|?|;|.|,|:|"|-]"," ",res)
res = data.frame(strsplit(as.character(res)," "))
names(res)[1] <- "text"
res_title <- data.frame(doc_id=row.names(res),
text=res$text)
corpus <- Corpus(DataframeSource(res_title))
corpus <- tm_map(corpus, tolower)
corpus <- tm_map(corpus, function(x) removeWords(x, stopwords("russian")))
res = paste(res1,res2,res3)
res = gsub("\r\n","",res)
res = gsub("[!|?|;|.|,|:|\"|-]"," ",res)
res
res = gsub("[\W]"," ",res)
res = gsub("[^а-я]"," ",res)
res
res = paste(res1,res2,res3)
res = gsub("\r\n","",res)
res = gsub("[^а-яА-Я]"," ",res)
res
View(res_title)
res = gsub("\r\n","",res)
res = gsub("[^а-яА-Я]"," ",res)
res = data.frame(strsplit(as.character(res)," "))
names(res)[1] <- "text"
res_title <- data.frame(doc_id=row.names(res),
text=res$text)
View(res_title)
res = paste(res1,res2,res3)
res = gsub("\r\n","",res)
res = gsub("[^а-яА-Я]"," ",res)
res = gsub("  "," ",res)
res = data.frame(strsplit(as.character(res)," "))
names(res)[1] <- "text"
res_title <- data.frame(doc_id=row.names(res),
text=res$text)
res = paste(res1,res2,res3)
res = gsub("\r\n","",res)
res = gsub("[^а-яА-Яё]"," ",res)
res = gsub("  "," ",res)
res = data.frame(strsplit(as.character(res)," "))
names(res)[1] <- "text"
res_title <- data.frame(doc_id=row.names(res),
text=res$text)
corpus <- Corpus(DataframeSource(res_title))
corpus <- tm_map(corpus, tolower)
require(tidyr)
require(rvest)
require(tm)
a = "https://nukadeti.ru/skazki/kasha_iz_topora"
ar = read_html(a)
res1 = as.character(html_text(html_node(ar, "div.tale-text.si-text")))
b = "https://nukadeti.ru/skazki/masha_i_medved"
br = read_html(b)
res2 = as.character(html_text(html_node(br, "div.tale-text.si-text")))
c = "https://nukadeti.ru/skazki/kolobok"
cr = read_html(c)
res3= as.character(html_text(html_node(cr, "div.tale-text.si-text")))
res = paste(res1,res2,res3)
res = gsub("\r\n","",res)
res = gsub("[^а-яА-Яё]"," ",res)
res = gsub("  "," ",res)
res = data.frame(strsplit(as.character(res)," "))
names(res)[1] <- "text"
res_title <- data.frame(doc_id=row.names(res),
text=res$text)
corpus <- Corpus(DataframeSource(res_title))
corpus <- tm_map(corpus, tolower)
corpus <- tm_map(corpus, function(x) removeWords(x, stopwords("russian")))
View(corpus)
install.packages("wordcloud")
tdm <- TermDocumentMatrix(corpus,control = list(minWordLength = 1))
m <- as.matrix(tdm)
v <- sort(rowSums(m),decreasing=TRUE)
df <- data.frame(word = names(v),freq=v)
require(RColorBrewer)
require(wordcloud)
pal2 <- brewer.pal(8,"Dark2")
wordcloud(df$word,df$freq, scale=c(8,.2),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
View(tdm)
View(m)
tdm[["dimnames"]][["Terms"]]
res = paste(res1,res2,res3)
res = gsub("\r\n","",res)
res = gsub("[^а-яА-Яё]\w"," ",res)
res = gsub("[^а-яА-Яё]\\w"," ",res)
res
res = gsub("[^а-яА-Яё]"," ",res)
res
res = paste(res1,res2,res3)
res = gsub("\r\n","",res)
res = gsub("[^а-яА-Яё]+\\s|[^а-яА-Яё]"," ",res)
res
res = gsub("  "," ",res)
res = data.frame(strsplit(as.character(res)," "))
names(res)[1] <- "text"
res_title <- data.frame(doc_id=row.names(res),
text=res$text)
corpus <- Corpus(DataframeSource(res_title))
corpus <- tm_map(corpus, tolower)
corpus <- tm_map(corpus, function(x) removeWords(x, stopwords("russian")))
tdm <- TermDocumentMatrix(corpus,control = list(minWordLength = 1))
m <- as.matrix(tdm)
v <- sort(rowSums(m),decreasing=TRUE)
df <- data.frame(word = names(v),freq=v)
require(RColorBrewer)
require(wordcloud)
pal2 <- brewer.pal(8,"Dark2")
wordcloud(df$word,df$freq, scale=c(8,.2),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
res = paste(res1,res2,res3)
res = gsub("\r\n","",res)
res = gsub("[^а-яА-Яё]+\\s|[^а-яА-Яё]"," ",res)
res
res = gsub("  "," ",res)
res = data.frame(strsplit(as.character(res)," "))
names(res)[1] <- "text"
res_title <- data.frame(doc_id=row.names(res),
text=res$text)
View(res_title)
res = paste(res1,res2,res3)
res = gsub("\r\n","",res)
res
res = paste(res1,res2,res3)
res = gsub("\r\n","",res)
res = gsub("[^а-яА-Яё]+\\s"," ",res)
res
res = paste(res1,res2,res3)
res = gsub("\r\n","",res)
res = gsub("[^а-яА-Яё]"," ",res)
res = gsub("  "," ",res)
res = data.frame(strsplit(as.character(res)," "))
names(res)[1] <- "text"
res_title <- data.frame(doc_id=row.names(res),
text=res$text)
corpus <- Corpus(DataframeSource(res_title))
corpus <- tm_map(corpus, tolower)
corpus <- tm_map(corpus, function(x) removeWords(x, stopwords("russian")))
tdm <- TermDocumentMatrix(corpus,control = list(minWordLength = 1))
m <- as.matrix(tdm)
v <- sort(rowSums(m),decreasing=TRUE)
df <- data.frame(word = names(v),freq=v)
require(RColorBrewer)
require(wordcloud)
pal2 <- brewer.pal(8,"Dark2")
wordcloud(df$word,df$freq, scale=c(8,.2),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
require(tidyr)
require(rvest)
require(tm)
a = "https://nukadeti.ru/skazki/kasha_iz_topora"
ar = read_html(a)
res1 = as.character(html_text(html_node(ar, "div.tale-text.si-text")))
b = "https://nukadeti.ru/skazki/masha_i_medved"
br = read_html(b)
res2 = as.character(html_text(html_node(br, "div.tale-text.si-text")))
c = "https://nukadeti.ru/skazki/kolobok"
cr = read_html(c)
res3= as.character(html_text(html_node(cr, "div.tale-text.si-text")))
res = paste(res1,res2,res3)
res = gsub("\r\n","",res)
res = gsub("[^а-яА-Яё]"," ",res)
res = gsub("  "," ",res)
res = data.frame(strsplit(as.character(res)," "))
names(res)[1] <- "text"
res_title <- data.frame(doc_id=row.names(res),
text=res$text)
corpus <- Corpus(DataframeSource(res_title))
corpus <- tm_map(corpus, tolower)
corpus <- tm_map(corpus, function(x) removeWords(x, stopwords("russian")))
tdm <- TermDocumentMatrix(corpus,control = list(minWordLength = 1))
m <- as.matrix(tdm)
v <- sort(rowSums(m),decreasing=TRUE)
df <- data.frame(word = names(v),freq=v)
require(RColorBrewer)
require(wordcloud)
pal2 <- brewer.pal(8,"Dark2")
wordcloud(df$word,df$freq, scale=c(8,.2),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
warnings()
require(tidyr)
require(rvest)
require(tm)
a = "https://nukadeti.ru/skazki/kasha_iz_topora"
ar = read_html(a)
res1 = as.character(html_text(html_node(ar, "div.tale-text.si-text")))
b = "https://nukadeti.ru/skazki/masha_i_medved"
br = read_html(b)
res2 = as.character(html_text(html_node(br, "div.tale-text.si-text")))
c = "https://nukadeti.ru/skazki/kolobok"
cr = read_html(c)
res3= as.character(html_text(html_node(cr, "div.tale-text.si-text")))
res = paste(res1,res2,res3)
res = gsub("\r\n","",res)
res = gsub("[^а-яА-Яё]"," ",res)
res = gsub("  "," ",res)
res = data.frame(strsplit(as.character(res)," "))
names(res)[1] <- "text"
res_title <- data.frame(doc_id=row.names(res),
text=res$text)
corpus <- Corpus(DataframeSource(res_title))
corpus <- tm_map(corpus, tolower)
corpus <- tm_map(corpus, function(x) removeWords(x, stopwords("russian")))
tdm <- TermDocumentMatrix(corpus,control = list(minWordLength = 1))
m <- as.matrix(tdm)
v <- sort(rowSums(m),decreasing=TRUE)
df <- data.frame(word = names(v),freq=v)
require(RColorBrewer)
require(wordcloud)
pal2 <- brewer.pal(8,"Dark2")
wordcloud(df$word,df$freq, scale=c(8,.2),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
corpus <- tm_map(corpus, function(x) removeWords(x, с("ка","волка")))
stp = c("ка","волка")
corpus <- tm_map(corpus, function(x) removeWords(x, stp))
tdm2 <- TermDocumentMatrix(corpus,control = list(minWordLength = 1))
m2 <- as.matrix(tdm2)
v2 <- sort(rowSums(m2),decreasing=TRUE)
df2 <- data.frame(word = names(v2),freq=v2)
pal3 <- brewer.pal(8,"Dark2")
wordcloud(df2$word,df2$freq, scale=c(8,.2),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
require(ggplot2)
table = diamonds
cut = unique(table[["cut"]])
color = unique(table[["color"]])
clarity = unique(table[["clarity"]])
res1 = expand.grid(cut, color)
res1 = unite(res1,"United", c("Var1","Var2"),sep="_")
res1= as.factor(res1[["United"]])
res2 = expand.grid(res1, clarity)
res = separate(res2,"Var1",c("cut","color"),sep="_")
require(ggplot2)
require(tidyr)
table = diamonds
cut = unique(table[["cut"]])
color = unique(table[["color"]])
clarity = unique(table[["clarity"]])
res1 = expand.grid(cut, color)
res1 = unite(res1,"United", c("Var1","Var2"),sep="_")
res1= as.factor(res1[["United"]])
res2 = expand.grid(res1, clarity)
res = separate(res2,"Var1",c("cut","color"),sep="_")
names(res)[names(res) == "Var2"] <- "clarity"
res
require(tidyr)
require(rvest)
require(tm)
a = "https://nukadeti.ru/skazki/kasha_iz_topora"
ar = read_html(a)
res1 = as.character(html_text(html_node(ar, "div.tale-text.si-text")))
b = "https://nukadeti.ru/skazki/masha_i_medved"
br = read_html(b)
res2 = as.character(html_text(html_node(br, "div.tale-text.si-text")))
c = "https://nukadeti.ru/skazki/kolobok"
cr = read_html(c)
res3= as.character(html_text(html_node(cr, "div.tale-text.si-text")))
res = paste(res1,res2,res3)
res = gsub("\r\n","",res)
res = gsub("[^а-яА-Яё]"," ",res)
res = gsub("  "," ",res)
res = data.frame(strsplit(as.character(res)," "))
names(res)[1] <- "text"
res_title <- data.frame(doc_id=row.names(res),
text=res$text)
corpus <- Corpus(DataframeSource(res_title))
corpus <- tm_map(corpus, tolower)
corpus <- tm_map(corpus, function(x) removeWords(x, stopwords("russian")))
corpus <- tm_map(corpus, function(x) removeWords(x, "ка"))
tdm <- TermDocumentMatrix(corpus,control = list(minWordLength = 1))
m <- as.matrix(tdm)
v <- sort(rowSums(m),decreasing=TRUE)
df <- data.frame(word = names(v),freq=v)
require(RColorBrewer)
require(wordcloud)
pal2 <- brewer.pal(8,"Dark2")
wordcloud(df$word,df$freq, scale=c(8,.2),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
wordcloud(df$word,df$freq, scale=c(10,.2),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
wordcloud(df$word,df$freq, scale=c(8,.2),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
wordcloud(df$word,df$freq, scale=c(3.5,0.25),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
wordcloud(df$word,df$freq, scale=c(3.5,0.25),min.freq=4,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
wordcloud(df$word,df$freq, scale=c(3.5,0.25),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
wordcloud(df$word,df$freq, scale=c(3,0.25),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
wordcloud(df$word,df$freq, scale=c(3,0.2),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
wordcloud(df$word,df$freq, scale=c(3,0.25),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
wordcloud(df$word,df$freq, scale=c(3.5,0.25),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
wordcloud(df$word,df$freq, scale=c(3.5,0.2),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
wordcloud(df$word,df$freq, scale=c(3.5,0.2),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
pal2 <- brewer.pal(8,"Spectral")
wordcloud(df$word,df$freq, scale=c(3.5,0.2),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
pal2 <- brewer.pal(8,"Accent")
wordcloud(df$word,df$freq, scale=c(3.5,0.2),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
pal2 <- brewer.pal(8,"Accent")
wordcloud(df$word,df$freq, scale=c(3.5,0.25),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
pal2 <- brewer.pal(8,"YIOrRd")
wordcloud(df$word,df$freq, scale=c(3.5,0.25),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
pal2 <- brewer.pal(8,"YIOrRd")
wordcloud(df$word,df$freq, scale=c(3.5,0.25),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
pal2 <- brewer.pal(8,"RdYIGn")
wordcloud(df$word,df$freq, scale=c(3.5,0.25),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
pal2 <- brewer.pal(8,"RdYiGn")
pal2 <- brewer.pal(8,"RdYlGn")
wordcloud(df$word,df$freq, scale=c(3.5,0.25),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
corpus <- tm_map(corpus, stemDocument)
install.packages("SnowballC")
require(SnowballC)
corpus <- tm_map(corpus, stemDocument)
View(corpus)
tdm <- TermDocumentMatrix(corpus,control = list(minWordLength = 1))
m <- as.matrix(tdm)
v <- sort(rowSums(m),decreasing=TRUE)
df <- data.frame(word = names(v),freq=v)
require(RColorBrewer)
require(wordcloud)
pal2 <- brewer.pal(8,"RdYlGn")
wordcloud(df$word,df$freq, scale=c(3.5,0.25),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
corpus <- tm_map(corpus, stemDocument(language="russian"))
stemDocument(corpus, language="russian")
detach("package:tidyr", unload = TRUE)
require(rvest)
require(tm)
a = "https://nukadeti.ru/skazki/kasha_iz_topora"
ar = read_html(a)
res1 = as.character(html_text(html_node(ar, "div.tale-text.si-text")))
b = "https://nukadeti.ru/skazki/masha_i_medved"
br = read_html(b)
res2 = as.character(html_text(html_node(br, "div.tale-text.si-text")))
c = "https://nukadeti.ru/skazki/kolobok"
cr = read_html(c)
res3= as.character(html_text(html_node(cr, "div.tale-text.si-text")))
res = paste(res1,res2,res3)
res = gsub("\r\n","",res)
res = gsub("[^а-яА-Яё]"," ",res)
res = gsub("  "," ",res)
res = data.frame(strsplit(as.character(res)," "))
names(res)[1] <- "text"
res_title <- data.frame(doc_id=row.names(res),
text=res$text)
corpus <- Corpus(DataframeSource(res_title))
corpus <- tm_map(corpus, tolower)
corpus <- tm_map(corpus, function(x) removeWords(x, stopwords("russian")))
corpus <- tm_map(corpus, function(x) removeWords(x, "ка"))
tdm <- TermDocumentMatrix(corpus,control = list(minWordLength = 1))
m <- as.matrix(tdm)
v <- sort(rowSums(m),decreasing=TRUE)
df <- data.frame(word = names(v),freq=v)
require(RColorBrewer)
require(wordcloud)
pal2 <- brewer.pal(8,"RdYlGn")
wordcloud(df$word,df$freq, scale=c(3.5,0.25),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
wordcloud(df$word,df$freq, scale=c(3.5,0.25),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
require(tidyr)
wordcloud(df$word,df$freq, scale=c(3.5,0.25),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
wordcloud(df$word,df$freq, scale=c(3.5,0.25),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
wordcloud(df$word,df$freq, scale=c(3.5,0.25),min.freq=3,
max.words=100, random.order=FALSE, rot.per=.15, colors=pal2)
View(res)
is.vector(res)
is.factor(res)
is.vector(res1)
install.packages("shiny")
library(shiny)
shiny::runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
require(rvest)
require(tm)
a = "https://xkcd.com/"
b = paste(a,input$num)
b = paste(a,"1495")
br = read_html(b)
b = paste(a,"1495",sep="")
br = read_html(b)
res <- html_attr(html_node(br, "div.comic.img"), "src")
res <- html_attr(html_node(br, "div.comic"), "src")
res <- html_attr(html_node(br, "img"), "src")
res
res <- html_attr(html_node(br, "#comic img"), "src")
res
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
res = paste("https:",res,sep="")
res
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
runApp('анализ данных/lab4')
# Chunk 1
source("http://www.openintro.org/stat/data/present.R")
plot(x = present$year, y = present$girls,  type = "l")
My first presentation in RSudio
========================================================
author: Nikita
date: 22.04.2020
autosize: true
Slide With Code
========================================================
```{r}
mtcars[1:3,]
```
Plot with girls born
========================================================
```{r, echo=FALSE}
source("http://www.openintro.org/stat/data/present.R")
plot(x = present$year, y = present$girls,  type = "l")
```
require(ggplot2)
require(tidyr)
table = diamonds
cut = unique(table[["cut"]])
color = unique(table[["color"]])
clarity = unique(table[["clarity"]])
res1 = expand.grid(cut, color)
res1 = unite(res1,"United", c("Var1","Var2"),sep="_")
res1= as.factor(res1[["United"]])
res2 = expand.grid(res1, clarity)
res = separate(res2,"Var1",c("cut","color"),sep="_")
names(res)[names(res) == "Var2"] <- "clarity"
res
View(present)
the_best_vector <- с(1:5000, 7000:10000)
the_best_vector <- с(1:5000)
the_best_vector <- 1:5000
the_best_vector <- 1:5000, 7000:10000
the_best_vector <- c(a, b)
a <- 1:5000
b <- 7000:10000
the_best_vector <- c(a, b)
the_best_vector <- c(1:5000, 7000:10000)
the_best_vector <- c(1:5000, 7000:10000)
data(mtcars)
data(mtcars)
mtcars$even_gear <- mtcars$gear %% 1
mtcars$even_gear[0:6]
str(mtcars$even_gear)
View(mtcars)
View(mtcars)
data(mtcars)
mtcars$even_gear <- mtcars$gear %% 2
str(mtcars$even_gear)
View(mtcars)
View(mtcars)
mtcars$even_gear <- as.numeric(mtcars$gear %% 2 == 0)
str(mtcars$even_gear)
mpg_4 <- mtcars$mpg[mtcars$cyl==4]
mini_mtcars <- mtcars[c(3,7,10,,12,-1)]
mini_mtcars <- mtcars[c(3,7,10,12,-1)]
mini_mtcars <- mtcars[c(3,7,10,12,nrow(mtcars))]
mini_mtcars <- mtcars[c(3,7,10,12,nrow(mtcars)-1)]
mini_mtcars <- mtcars[c(3,7,10,12,nrow(mtcars)),]
View(mini_mtcars)
View(mini_mtcars)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
setwd("~/анализ данных R")
x <- "Привет"
print(x)
